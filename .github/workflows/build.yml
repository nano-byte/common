name: Build
on: [push, pull_request]

jobs:
  windows:
    runs-on: windows-latest
    steps:
      # Prepare
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: gittools/actions/gitversion/setup@v0.9.10
        with:
          versionSpec: '5.5.x'
      - uses: gittools/actions/gitversion/execute@v0.9.10
        id: gitversion
      - uses: actions/cache@v2
        with:
          path: |
            ~\AppData\Roaming\0install.net
            ~\AppData\Local\0install.net
            C:\ProgramData\0install.net
          key: 0install-${{hashFiles('**/build.ps1')}}

      # Build
      - name: Build (pre-release)
        if: steps.gitversion.outputs.preReleaseLabel != ''
        run: .\build.ps1 ${{steps.gitversion.outputs.nuGetVersion}}-${{steps.gitversion.outputs.shortSha}}
      - name: Build (release)
        if: steps.gitversion.outputs.preReleaseLabel == ''
        run: .\build.ps1 ${{steps.gitversion.outputs.nuGetVersion}}
      - name: Report test results
        if: always()
        uses: scacap/action-surefire-report@v1
        with:
          github_token: ${{github.token}}
          report_paths: '**/TestResults/TestResults.xml'
          check_name: windows - Test Report

      # Release
      - name: Create GitHub Release
        if: steps.gitversion.outputs.preReleaseLabel == ''
        uses: actions/create-release@v1
        with:
          tag_name: ${{github.ref}}
          release_name: ${{github.ref}}
        env:
          GITHUB_TOKEN: ${{github.token}}

      # Publish
      - name: Publish documentation
        if: steps.gitversion.outputs.preReleaseLabel == ''
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{github.token}}
          force_orphan: true
          publish_dir: artifacts/Documentation
          cname: common.nano-byte.net
      - name: Publish packages (GitHub)
        if: github.event_name == 'push' && !startsWith(github.ref, 'refs/heads/renovate/')
        run: |
          Get-ChildItem artifacts\Release\*.nupkg | ForEach-Object {
            curl.exe -sS -X PUT -u "${{github.actor}}:${{github.token}}" -F package=@$_ https://nuget.pkg.github.com/${{github.repository_owner}}/
          }
      - name: Publish packages (NuGet.org)
        if: steps.gitversion.outputs.preReleaseLabel == ''
        run: dotnet nuget push artifacts\Release\*.nupkg --source nuget.org --api-key ${{secrets.NUGET_API_KEY}}

  linux:
    runs-on: ubuntu-latest
    steps:
      # Prepare
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: gittools/actions/gitversion/setup@v0.9.10
        with:
          versionSpec: '5.5.x'
      - uses: gittools/actions/gitversion/execute@v0.9.10
        id: gitversion
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      # Build
      - name: Build (pre-release)
        if: steps.gitversion.outputs.preReleaseLabel != ''
        run: ./build.sh ${{steps.gitversion.outputs.nuGetVersion}}-${{steps.gitversion.outputs.shortSha}}
      - name: Build (release)
        if: steps.gitversion.outputs.preReleaseLabel == ''
        run: ./build.sh ${{steps.gitversion.outputs.nuGetVersion}}
      - name: Report test results
        if: always()
        uses: scacap/action-surefire-report@v1
        with:
          github_token: ${{github.token}}
          report_paths: '**/TestResults/TestResults.xml'
          check_name: linux - Test Report
